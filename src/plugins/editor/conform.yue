import "macros" as { $ }

cfg = 
  keys: {}
  notify_on_error: true
  formatters_by_ft:
    elixir: { "mix" }
    lua: { "stylua" }
    nix: { "nixfmt" }
    python: { "black", stop_after_first: true }
    ruby: { "rubocop", "solargraph" }
    svelte: { "eslint_d", "prettierd", "prettier", stop_after_first: false }
    terraform: { "terraform_fmt" }
    typescript: { "eslint_d", "prettierd", "prettier", stop_after_first: false }
    javascript: { "eslint_d", "prettierd", "prettier", stop_after_first: false }
    json: { "prettierd", "prettier", stop_after_first: false }
  format_on_save: (bufr) ->
    disabled_ft = { c: true, cpp: true }
    lsp_format_opt = if disabled_ft[vim.bo[bufr].filetype]
      "never"
    else
      "fallback"
    { lsp_format: lsp_format_opt }


export default {
  config: ->
    import "conform"
    format_range = () ->
      conform.format
        lsp_fallback: true
        async: false
        timeout_ms: 500
    format_file = () ->
      conform.format
        lsp_format: "fallback"
        async: true

    conform.setup cfg

    $fbind { "n", "v" }, "<leader>mr", format_range, { desc: "for[m]at file or range" }
    $fbind "n", "<leader>mf", format_file, { desc: "for[m]at current file" }
}
